Code for I
  Code:{ Push 0
         Eval
         Update 1
         Pop 1
         Unwind }

Code for K
  Code:{ Push 0
         Eval
         Update 2
         Pop 2
         Unwind }

Code for K1
  Code:{ Push 1
         Eval
         Update 2
         Pop 2
         Unwind }

Code for S
  Code:{ Push 2
         Push 2
         MkAp
         Push 3
         Push 2
         MkAp
         MkAp
         Eval
         Update 3
         Pop 3
         Unwind }

Code for compose
  Code:{ Push 2
         Push 2
         MkAp
         Push 1
         MkAp
         Eval
         Update 3
         Pop 3
         Unwind }

Code for twice
  Code:{ Push 0
         Push 1
         PushGlobal compose
         MkAp
         MkAp
         Eval
         Update 1
         Pop 1
         Unwind }

Code for main
  Code:{ PushInt 3
         PushGlobal K
         PushGlobal K
         PushGlobal S
         MkAp
         MkAp
         PushGlobal twice'
         MkAp
         PushGlobal twice'
         MkAp
         MkAp
         Eval
         Update 0
         Pop 0
         Unwind }

Code for twice'
  Code:{ Push 1
         Push 1
         MkAp
         Push 0
         Par
         Push 1
         MkAp
         Update 2
         Pop 2
         Unwind }

Code for +
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         Add
         UpdateInt 2
         Return }

Code for -
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         Sub
         UpdateInt 2
         Return }

Code for *
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         Mul
         UpdateInt 2
         Return }

Code for /
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         Div
         UpdateInt 2
         Return }

Code for negate
  Code:{ Push 0
         Eval
         Get
         Neg
         UpdateInt 1
         Return }

Code for ==
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         Eq
         UpdateBool 2
         Return }

Code for /=
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         Ne
         UpdateBool 2
         Return }

Code for >=
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         Ge
         UpdateBool 2
         Return }

Code for >
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         Gt
         UpdateBool 2
         Return }

Code for <=
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         Le
         UpdateBool 2
         Return }

Code for <
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         Lt
         UpdateBool 2
         Return }

Code for &&
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         And
         UpdateBool 2
         Return }

Code for ||
  Code:{ Push 1
         Eval
         Get
         Push 0
         Eval
         Get
         Or
         UpdateBool 2
         Return }

Code for not
  Code:{ Push 0
         Eval
         Get
         Not
         UpdateBool 1
         Return }

Code for if
  Code:{ Push 0
         Eval
         Get
         Cond [2: {Push 1; Eval; ...}, 1: {Push 2; Eval; ...}] }

Code for par
  Code:{ Push 1
         Push 0
         Par
         Push 1
         MkAp
         Update 2
         Pop 2
         Unwind }

Code for True
  Code:{ Pack 20
         Eval
         Update 0
         Pop 0
         Unwind }

Code for False
  Code:{ Pack 10
         Eval
         Update 0
         Pop 0
         Unwind }

     0) Output: ""
        Sparks: 
        Task #0:   Code:{ Eval
                          Print }
                 
                  Stack:[ #7: Global main ]
                   Dump:[  ]
                 Vstack:[  ]
                  Clock: 0
        Heap: #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: Global main
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

     1) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #7: Global main ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 1
        Heap: #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: Global main
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

     2) Output: ""
        Sparks: 
        Task #0:   Code:{ PushInt 3
                          PushGlobal K
                          PushGlobal K
                          PushGlobal S
                          MkAp
                          MkAp
                          PushGlobal twice'
                          MkAp
                          PushGlobal twice'
                          MkAp
                          MkAp
                          Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0) ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 2
        Heap: #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

     3) Output: ""
        Sparks: 
        Task #0:   Code:{ PushGlobal K
                          PushGlobal K
                          PushGlobal S
                          MkAp
                          MkAp
                          PushGlobal twice'
                          MkAp
                          PushGlobal twice'
                          MkAp
                          MkAp
                          Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #27: 3 ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 3
        Heap: #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

     4) Output: ""
        Sparks: 
        Task #0:   Code:{ PushGlobal K
                          PushGlobal S
                          MkAp
                          MkAp
                          PushGlobal twice'
                          MkAp
                          PushGlobal twice'
                          MkAp
                          MkAp
                          Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #27: 3
                          #2: Global K ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 4
        Heap: #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

     5) Output: ""
        Sparks: 
        Task #0:   Code:{ PushGlobal S
                          MkAp
                          MkAp
                          PushGlobal twice'
                          MkAp
                          PushGlobal twice'
                          MkAp
                          MkAp
                          Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #27: 3
                          #2: Global K
                          #2: Global K ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 5
        Heap: #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

     6) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          MkAp
                          PushGlobal twice'
                          MkAp
                          PushGlobal twice'
                          MkAp
                          MkAp
                          Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #4: Global S ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 6
        Heap: #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

     7) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          PushGlobal twice'
                          MkAp
                          PushGlobal twice'
                          MkAp
                          MkAp
                          Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #27: 3
                          #2: Global K
                          #28: Ap #4 #2 ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 7
        Heap: #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

     8) Output: ""
        Sparks: 
        Task #0:   Code:{ PushGlobal twice'
                          MkAp
                          PushGlobal twice'
                          MkAp
                          MkAp
                          Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #27: 3
                          #29: Ap #28 #2 ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 8
        Heap: #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

     9) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          PushGlobal twice'
                          MkAp
                          MkAp
                          Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #27: 3
                          #29: Ap #28 #2
                          #8: Global twice' ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 9
        Heap: #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    10) Output: ""
        Sparks: 
        Task #0:   Code:{ PushGlobal twice'
                          MkAp
                          MkAp
                          Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #27: 3
                          #30: Ap #8 #29 ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 10
        Heap: #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    11) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          MkAp
                          Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #27: 3
                          #30: Ap #8 #29
                          #8: Global twice' ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 11
        Heap: #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    12) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #27: 3
                          #31: Ap #8 #30 ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 12
        Heap: #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    13) Output: ""
        Sparks: 
        Task #0:   Code:{ Eval
                          Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #32: Ap #31 #27 ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 13
        Heap: #32: Ap #31 #27
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    14) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #32: Ap #31 #27 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 14
        Heap: #32: Ap #31 #27
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    15) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #32: *Ap #31 #27 (locked by task#0)
                          #31: Ap #8 #30 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 15
        Heap: #32: *Ap #31 #27 (locked by task#0)
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    16) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #32: *Ap #31 #27 (locked by task#0)
                          #31: *Ap #8 #30 (locked by task#0)
                          #8: Global twice' ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 16
        Heap: #32: *Ap #31 #27 (locked by task#0)
              #31: *Ap #8 #30 (locked by task#0)
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    17) Output: ""
        Sparks: 
        Task #0:   Code:{ Push 1
                          Push 1
                          MkAp
                          Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #32: *Ap #31 #27 (locked by task#0)
                          #27: 3
                          #30: Ap #8 #29 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 17
        Heap: #32: *Ap #31 #27 (locked by task#0)
              #31: *Ap #8 #30 (locked by task#0)
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    18) Output: ""
        Sparks: 
        Task #0:   Code:{ Push 1
                          MkAp
                          Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #32: *Ap #31 #27 (locked by task#0)
                          #27: 3
                          #30: Ap #8 #29
                          #27: 3 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 18
        Heap: #32: *Ap #31 #27 (locked by task#0)
              #31: *Ap #8 #30 (locked by task#0)
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    19) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #32: *Ap #31 #27 (locked by task#0)
                          #27: 3
                          #30: Ap #8 #29
                          #27: 3
                          #30: Ap #8 #29 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 19
        Heap: #32: *Ap #31 #27 (locked by task#0)
              #31: *Ap #8 #30 (locked by task#0)
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    20) Output: ""
        Sparks: 
        Task #0:   Code:{ Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #32: *Ap #31 #27 (locked by task#0)
                          #27: 3
                          #30: Ap #8 #29
                          #33: Ap #30 #27 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 20
        Heap: #33: Ap #30 #27
              #32: *Ap #31 #27 (locked by task#0)
              #31: *Ap #8 #30 (locked by task#0)
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    21) Output: ""
        Sparks: 
        Task #0:   Code:{ Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #32: *Ap #31 #27 (locked by task#0)
                          #27: 3
                          #30: Ap #8 #29
                          #33: Ap #30 #27
                          #33: Ap #30 #27 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 21
        Heap: #33: Ap #30 #27
              #32: *Ap #31 #27 (locked by task#0)
              #31: *Ap #8 #30 (locked by task#0)
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    22) Output: ""
        Sparks: #33
        Task #0:   Code:{ Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #32: *Ap #31 #27 (locked by task#0)
                          #27: 3
                          #30: Ap #8 #29
                          #33: Ap #30 #27 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 22
        Heap: #33: Ap #30 #27
              #32: *Ap #31 #27 (locked by task#0)
              #31: *Ap #8 #30 (locked by task#0)
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    23) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #32: *Ap #31 #27 (locked by task#0)
                          #27: 3
                          #30: Ap #8 #29
                          #33: Ap #30 #27
                          #30: Ap #8 #29 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 23
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #33: Ap #30 #27 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 1
        Heap: #33: Ap #30 #27
              #32: *Ap #31 #27 (locked by task#0)
              #31: *Ap #8 #30 (locked by task#0)
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    24) Output: ""
        Sparks: 
        Task #0:   Code:{ Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #32: *Ap #31 #27 (locked by task#0)
                          #27: 3
                          #30: Ap #8 #29
                          #34: Ap #30 #33 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 24
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #33: *Ap #30 #27 (locked by task#1)
                          #30: Ap #8 #29 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 2
        Heap: #34: Ap #30 #33
              #33: *Ap #30 #27 (locked by task#1)
              #32: *Ap #31 #27 (locked by task#0)
              #31: *Ap #8 #30 (locked by task#0)
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
           task#0 meets *NAp locked by task#1
task#0 meets *NAp locked by task#1
task#0 meets *NAp locked by task#1
   #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    25) Output: ""
        Sparks: 
        Task #0:   Code:{ Pop 2
                          Unwind }
                 
                  Stack:[ #32: Ind #34
                          #27: 3
                          #30: *Ap #8 #29 (locked by task#1) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 25
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #33: *Ap #30 #27 (locked by task#1)
                          #30: *Ap #8 #29 (locked by task#1)
                          #8: Global twice' ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 3
        Heap: #34: Ap #30 #33
              #33: *Ap #30 #27 (locked by task#1)
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#1)
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    26) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #32: Ind #34 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 26
        
        Task #1:   Code:{ Push 1
                          Push 1
                          MkAp
                          Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #33: *Ap #30 #27 (locked by task#1)
                          #27: 3
                          #29: Ap #28 #2 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 4
        Heap: #34: Ap #30 #33
              #33: *Ap #30 #27 (locked by task#1)
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#1)
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    27) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #34: Ap #30 #33 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 27
        
        Task #1:   Code:{ Push 1
                          MkAp
                          Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #33: *Ap #30 #27 (locked by task#1)
                          #27: 3
                          #29: Ap #28 #2
                          #27: 3 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 5
        Heap: #34: Ap #30 #33
              #33: *Ap #30 #27 (locked by task#1)
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#1)
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    28) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #30: *Ap #8 #29 (locked by task#1) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 28
        
        Task #1:   Code:{ MkAp
                          Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #33: *Ap #30 #27 (locked by task#1)
                          #27: 3
                          #29: Ap #28 #2
                          #27: 3
                          #29: Ap #28 #2 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 6
        Heap: #34: *Ap #30 #33 (locked by task#0)
              #33: *Ap #30 #27 (locked by task#1)
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#1)
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    29) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #30: *Ap #8 #29 (locked by task#1) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 29
       task#0 meets *NAp locked by task#1
task#0 meets *NAp locked by task#1
task#0 meets *NAp locked by task#1
 
        Task #1:   Code:{ Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #33: *Ap #30 #27 (locked by task#1)
                          #27: 3
                          #29: Ap #28 #2
                          #35: Ap #29 #27 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 7
        Heap: #35: Ap #29 #27
              #34: *Ap #30 #33 (locked by task#0)
              #33: *Ap #30 #27 (locked by task#1)
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#1)
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    30) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #30: *Ap #8 #29 (locked by task#1) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 30
        
        Task #1:   Code:{ Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #33: *Ap #30 #27 (locked by task#1)
                          #27: 3
                          #29: Ap #28 #2
                          #35: Ap #29 #27
                          #35: Ap #29 #27 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 8
        Heap: #35: Ap #29 #27
              #34: *Ap #30 #33 (locked by task#0)
              #33: *Ap #30 #27 (locked by task#1)
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#1)
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    31) Output: ""
        Sparks: #35
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #30: *Ap #8 #29 (locked by task#1) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 31
        
        Task #1:   Code:{ Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #33: *Ap #30 #27 (locked by task#1)
                          #27: 3
                          #29: Ap #28 #2
                          #35: Ap #29 #27 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 9
        Heap: #35: Ap #29 #27
              #34: *Ap #30 #33 (locked by task#0)
              #33: *Ap #30 #27 (locked by task#1)
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#1)
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    32) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #30: *Ap #8 #29 (locked by task#1) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 32
        
        Task #1:   Code:{ MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #33: *Ap #30 #27 (locked by task#1)
                          #27: 3
                          #29: Ap #28 #2
                          #35: Ap #29 #27
                          #29: Ap #28 #2 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 10
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #35: Ap #29 #27 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 1
        Heap: #35: Ap #29 #27
              #34: *Ap #30 #33 (locked by task#0)
              #33: *Ap #30 #27 (locked by task#1)
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#1)
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    33) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #30: *Ap #8 #29 (locked by task#1) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 33
        
        Task #1:   Code:{ Update 2
                 task#1 meets *NAp locked by task#2
         Pop 2
                          Unwind }
                 
                  Stack:[ #33: *Ap #30 #27 (locked by task#1)
                          #27: 3
                          #29: Ap #28 #2
                          #36: Ap #29 #35 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 11
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #29: Ap #28 #2 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 2
        Heap: #36: Ap #29 #35
              #35: *Ap #29 #27 (locked by task#2)
              #34: *Ap #30 #33 (locked by task#0)
              #33: *Ap #30 #27 (locked by task#1)
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#1)
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    34) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #30: Ap #8 #29 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 34
        
        Task #1:   Code:{ Pop 2
                          Unwind }
                 
                  Stack:[ #33: Ind #36
                          #27: 3
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 12
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #29: *Ap #28 #2 (locked by task#2)
                          #28: Ap #4 #2 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 3
        Heap: #36: Ap #29 #35
              #35: *Ap #29 #27 (locked by task#2)
              #34: *Ap #30 #33 (locked by task#0)
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#2)
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    35) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #30: *Ap #8 #29 (locked by task#0)
                          #8: Global twice' ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 35
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #33: Ind #36 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 13
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #29: *Ap #28 #2 (locked by task#2)
                          #28: *Ap #4 #2 (locked by task#2)
                          #4: Global S ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 4
        Heap: #36: Ap #29 #35
              #35: *Ap #29 #27 (locked by task#2)
              #34: *Ap #30 #33 (locked by task#0)
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#0)
              #29: *Ap #28 #2 (locked by task#2)
              #28: *Ap #4 #2 (locked by task#2)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    36) Output: ""
        Sparks: 
        Task #0:   Code:{ Push 1
                          Push 1
                          MkAp
                          Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #33: Ind #36
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 36
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: Ap #29 #35 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 14
        
        Task #2:   Code:{ Push 2
                          Push 2
                          MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #27: 3
                          #2: Global K
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 5
        Heap: #36: Ap #29 #35
              #35: *Ap #29 #27 (locked by task#2)
              #34: *Ap #30 #33 (locked by task#0)
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#0)
              #29: *Ap #28 #2 (locked by task#2)
              #28: *Ap #4 #2 (locked by task#2)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Globaltask#1 meets *NAp locked by task#2
task#1 meets *NAp locked by task#2
task#1 meets *NAp locked by task#2
 ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    37) Output: ""
        Sparks: 
        Task #0:   Code:{ Push 1
                          MkAp
                          Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #33: Ind #36
                          #29: *Ap #28 #2 (locked by task#2)
                          #33: Ind #36 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 37
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 15
        
        Task #2:   Code:{ Push 2
                          MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #27: 3 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 6
        Heap: #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: *Ap #30 #33 (locked by task#0)
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#0)
              #29: *Ap #28 #2 (locked by task#2)
              #28: *Ap #4 #2 (locked by task#2)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    38) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #33: Ind #36
                          #29: *Ap #28 #2 (locked by task#2)
                          #33: Ind #36
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 38
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 16
        
        Task #2:   Code:{ MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #27: 3
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 7
        Heap: #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: *Ap #30 #33 (locked by task#0)
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#0)
              #29: *Ap #28 #2 (locked by task#2)
              #28: *Ap #4 #2 (locked by task#2)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    39) Output: ""
        Sparks: 
        Task #0:   Code:{ Push 0
                          Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #33: Ind #36
                          #29: *Ap #28 #2 (locked by task#2)
                          #37: Ap #29 #33 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 39
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 17
        
        Task #2:   Code:{ Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #38: Ap #2 #27 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 8
        Heap: #38: Ap #2 #27
              #37: Ap #29 #33
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: *Ap #30 #33 (locked by task#0)
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (loctask#1 meets *NAp locked by task#2
task#1 meets *NAp locked by task#2
task#3 meets *NAp locked by task#2
task#1 meets *NAp locked by task#2
ked by task#0)
              #29: *Ap #28 #2 (locked by task#2)
              #28: *Ap #4 #2 (locked by task#2)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    40) Output: ""
        Sparks: 
        Task #0:   Code:{ Par
                          Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #33: Ind #36
                          #29: *Ap #28 #2 (locked by task#2)
                          #37: Ap #29 #33
                          #37: Ap #29 #33 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 40
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 18
        
        Task #2:   Code:{ Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #38: Ap #2 #27
                          #27: 3 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 9
        Heap: #38: Ap #2 #27
              #37: Ap #29 #33
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: *Ap #30 #33 (locked by task#0)
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#0)
              #29: *Ap #28 #2 (locked by task#2)
              #28: *Ap #4 #2 (locked by task#2)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    41) Output: ""
        Sparks: #37
        Task #0:   Code:{ Push 1
                          MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #33: Ind #36
                          #29: *Ap #28 #2 (locked by task#2)
                          #37: Ap #29 #33 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 41
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 19
        
        Task #2:   Code:{ MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #38: Ap #2 #27
                          #27: 3
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 10
        Heap: #38: Ap #2 #27
              #37: Ap #29 #33
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: *Ap #30 #33 (locked by task#0)
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#0)
              #29: *Ap #28 #2 (locked by task#2)
              #28: *Ap #4 #2 (locked by task#2)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    42) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #33: Ind #36
                          #29: *Ap #28 #2 (locked by task#2)
                          #37: Ap #29 #33
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 42
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 20
        
        Task #2:   Code:{ MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #38: Ap #2 #27
                          #39: Ap #2 #27 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 11
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #37: Ap #29 #33 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 1
        Heap: #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ap #29 #33
         task#3 meets *NAp locked by task#1
task#3 meets *NAp locked by task#1
     #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: *Ap #30 #33 (locked by task#0)
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#0)
              #29: *Ap #28 #2 (locked by task#2)
              #28: *Ap #4 #2 (locked by task#2)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    43) Output: ""
        Sparks: 
        Task #0:   Code:{ Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #34: *Ap #30 #33 (locked by task#0)
                          #33: Ind #36
                          #29: *Ap #28 #2 (locked by task#2)
                          #40: Ap #29 #37 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 43
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 21
        
        Task #2:   Code:{ Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #41: Ap #39 #38 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 12
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #29: *Ap #28 #2 (locked by task#2) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 2
        Heap: #41: Ap #39 #38
              #40: Ap #29 #37
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: *Ap #30 #33 (locked by task#0)
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: *Ap #8 #29 (locked by task#0)
              #29: *Ap #28 #2 (locked by task#2)
              #28: *Ap #4 #2 (locked by task#2)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    44) Output: ""
        Sparks: 
        Task #0:   Code:{ Pop 2
                          Unwind }
                 
                  Stack:[ #34: Ind #40
                          #33: Ind #36
                          #29: Ap #28 #2 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 44
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #29: Ap #28 #2 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 22
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #41: Ap #39 #38 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #35], []> ]
                 Vstack:[  ]
                  Clock: 13
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #29: Ap #28 #2 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 3
        Heap: #41: Ap #39 #38
              #40: Ap #29 #37
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    45) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #34: Ind #40 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 45
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #29: Ap #28 #2
                          #28: Ap #4 #2 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 23
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #41: *Ap #39 #38 (locked by task#2)
                          #39: Ap #2 #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #35], []> ]
                 Vstack:[  ]
                  Clock: 14
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #29: Ap #28 #2 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 4
        Heap: #41: *Ap #39 #38 (locked by task#2)
              #40: Ap #29 #37
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3

              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    46) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: Ap #29 #37 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 46
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #29: *Ap #28 #2 (locked by task#3)
                          #28: *Ap #4 #2 (locked by task#1)
                          #4: Global S ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 24
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #41: *Ap #39 #38 (locked by task#2)
                          #39: *Ap #2 #27 (locked by task#2)
                          #2: Global K ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #35], []> ]
                 Vstack:[  ]
                  Clock: 15
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #29: *Ap #28 #2 (locked by task#3)
                          #28: *Ap #4 #2 (locked by task#1) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 5
        Heap: #41: *Ap #39 #38 (locked by task#2)
              #40: Ap #29 #37
              #39: *Ap #2 #27 (locked by task#2)
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#3)
              #28: *Ap #4 #2 (locked by task#1)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    47) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #29: *Ap #28 #2 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 47
        
        Task #1:   Code:{ Push 2
                          Push 2
                          MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #35: *Ap #29 #27 (locked by task#2)
                          #2: Global K
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 25
        
        Task #2:   Code:{ Push 0
                          Eval
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #41: *Ap #39 #38 (locked by task#2)
                          #38: Ap #2 #27
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #35], []> ]
                 Vstack:[  ]
                  Clock: 16
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #29: *Ap #28 #2 (locked by task#3)
                          #28: Ap #4 #2 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 6
        Heap: #41: *Ap #39 #38 (locked by task#2)
              #40: *Ap #29 #37 (locked by task#0)
              #39: *Ap #2 #27 (locked by task#2)
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#3)
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    48) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #29: *Ap #28 #2 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 48
        
        Task #1:   Code:{ Push 2
                          MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #35: *Ap #29 #27 (locked by task#2)
                          #2: Global K
                          #2: Global K
                          #35: *Ap #29 #27 (locked by task#2) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 26
        
        Task #2:   Code:{ Eval
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stask#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
tack:[ #41: *Ap #39 #38 (locked by task#2)
                          #38: Ap #2 #27
                          #27: 3
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #35], []> ]
                 Vstack:[  ]
                  Clock: 17
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #29: *Ap #28 #2 (locked by task#3)
                          #28: *Ap #4 #2 (locked by task#3)
                          #4: Global S ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 7
        Heap: #41: *Ap #39 #38 (locked by task#2)
              #40: *Ap #29 #37 (locked by task#0)
              #39: *Ap #2 #27 (locked by task#2)
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#3)
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    49) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #29: *Ap #28 #2 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 49
        
        Task #1:   Code:{ MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #35: *Ap #29 #27 (locked by task#2)
                          #2: Global K
                          #2: Global K
                          #35: *Ap #29 #27 (locked by task#2)
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 27
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #35], []>
                          <{Update 2; Pop 2; Unwind}, [#27, #38, #41], []> ]
                 Vstack:[  ]
                  Clock: 18
        
        Task #3:   Code:{ Push 2
                          Push 2
                          MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #33: Ind #36
                          #2: Global K
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 8
        Heap: #41: *Ap #39 #38 (locked by task#2)
              #40: *Ap #29 #37 (locked by task#0)
              #39: *Ap #2 #27 (locked by task#2)
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#3)
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    50) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #29: *Ap #28 #2 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 50
        
        Task #1:   Code:{ Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #35: *Ap #29 #27 (locked by task#2)
                          #2: Global K
                          #2: Global K
                          #42: Ap #2 #35 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 28
        
        Task #2:   Code:{ Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #41: *Ap #39 #38 (locked by task#2)
                          #38: Ap #2 #27
                          #27: 3
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #35], []> ]
                 Vstack:[  ]
                  Clock: 19
        
        Task #3:   Code:{ Push 2
                          MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #33: Ind #36
                          #2: Global K
                          #2: Global K
                          #33: Ind #36 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 9
        Heap: #42: Ap #2 #35
              #41: *Ap #39 #38 (locked by task#2)
              #40: *Ap #29 #37 (locked by task#0)
              #39: *Ap #2 #27 (locked by task#2)
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
       task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
       #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#3)
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    51) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #29: *Ap #28 #2 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 51
        
        Task #1:   Code:{ Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #35: *Ap #29 #27 (locked by task#2)
                          #2: Global K
                          #2: Global K
                          #42: Ap #2 #35
                          #35: *Ap #29 #27 (locked by task#2) ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 29
        
        Task #2:   Code:{ Pop 2
                          Unwind }
                 
                  Stack:[ #41: Ind #27
                          #38: Ap #2 #27
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #35], []> ]
                 Vstack:[  ]
                  Clock: 20
        
        Task #3:   Code:{ MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #33: Ind #36
                          #2: Global K
                          #2: Global K
                          #33: Ind #36
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 10
        Heap: #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#3)
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    52) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #29: *Ap #28 #2 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 52
        
        Task #1:   Code:{ MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #35: *Ap #29 #27 (locked by task#2)
                          #2: Global K
                          #2: Global K
                          #42: Ap #2 #35
                          #35: *Ap #29 #27 (locked by task#2)
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 30
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #41: Ind #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #35], []> ]
                 Vstack:[  ]
                  Clock: 21
        
        Task #3:   Code:{ Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #33: Ind #36
                          #2: Global K
                          #2: Global K
                          #43: Ap #2 #33 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 11
        Heap: #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#3)
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    53) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #29: *Ap #28 #2 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 53
        
        Task #1:   Code:{ MkAp
                          Eval
                          Update 3
         task#0 meets *NAp locked by task#3
                 Pop 3
                          Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #35: *Ap #29 #27 (locked by task#2)
                          #2: Global K
                          #2: Global K
                          #42: Ap #2 #35
                          #44: Ap #2 #35 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 31
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #35], []> ]
                 Vstack:[  ]
                  Clock: 22
        
        Task #3:   Code:{ Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #33: Ind #36
                          #2: Global K
                          #2: Global K
                          #43: Ap #2 #33
                          #33: Ind #36 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 12
        Heap: #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#3)
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    54) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #29: *Ap #28 #2 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 54
        
        Task #1:   Code:{ Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1)
                          #35: *Ap #29 #27 (locked by task#2)
                          #2: Global K
                          #2: Global K
                          #45: Ap #44 #42 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 32
        
        Task #2:   Code:{ Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #35: *Ap #29 #27 (locked by task#2)
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #27: 3 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 23
        
        Task #3:   Code:{ MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #33: Ind #36
                          #2: Global K
                          #2: Global K
                          #43: Ap #2 #33
                          #33: Ind #36
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 13
        Heap: #45: Ap #44 #42
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: *Ap #29 #27 (locked by task#2)
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#3)
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    55) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #29: Ap #28 #2 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 55
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #45: Ap #44 #42 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #35, #36], []> ]
                 Vstack:[  ]
                  Clock: 33
        
        Task #2:   Code:{ Pop 3
                          Unwind }
                 
                  Stack:[ #35: Ind #27
                          #27: 3
                          #2: Global K
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 24
        
        Task #3:   Code:{ MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #33: Ind #36
                          #2: Global K
                          #2: Global K
                          #43: Ap #2 #33
                          #46: Ap #2 #33 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 14
        Heap: #46: Ap #2 #33
              #45: Ap #44 #42
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    56) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #29: *Ap #28 #2 (locked by task#0)
                          #28: Ap #4 #2 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 56
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #45: *Ap #44 #42 (locked by task#1)
                          #44: Ap #2 #35 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #35, #36], []> ]
                 Vstack:[  ]
                  Clock: 34
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #35: Ind #27 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 25
        
        Task #3:   Code:{ Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #33: Ind #36
                          #2: Global K
                          #2: Global K
                          #47: Ap #46 #43 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 15
        Heap: #47: Ap #46 #43
              #46: Ap #2 #33
              #45: *Ap #44 #42 (locked by task#1)
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#0)
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    57) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #29: *Ap #28 #2 (locked by task#0)
                          #28: *Ap #4 #2 (locked by task#0)
                          #4: Global S ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 57
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #45: *Ap #44 #42 (locked by task#1)
                          #44: *Ap #2 #35 (locked by task#1)
                          #2: Global K ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #35, #36], []> ]
                 Vstack:[  ]
                  Clock: 35
        
        Task #2:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 26
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #47: Ap #46 #43 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []> ]
                 Vstack:[  ]
                  Clock: 16
        Heap: #47: Ap #46 #43
              #46: Ap #2 #33
              #45: *Ap #44 #42 (locked by task#1)
              #44: *Ap #2 #35 (locked by task#1)
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#0)
              #28: *Ap #4 #2 (locked by task#0)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    58) Output: ""
        Sparks: 
        Task #0:   Code:{ Push 2
                          Push 2
                          MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #37: *Ap #29 #33 (locked by task#3)
                          #2: Global K
                          #2: Global K ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 58
        
        Task #1:   Code:{ Push 0
                          Eval
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #45: *Ap #44 #42 (locked by task#1)
                          #42: Ap #2 #35
                          #35: Ind #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #35, #36], []> ]
                 Vstack:[  ]
                  Clock: 36
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #47: *Ap #46 #43 (locked by task#3)
                          #46: Ap #2 #33 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []> ]
                 Vstack:[  ]
                  Clock: 17
        Heap: #47: *Ap #46 #43 (locked by task#3)
              #46: Ap #2 #33
              #45: *Ap #44 #42 (locked by task#1)
              #44: *Ap #2 #35 (locked by task#1)
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#0)
              #28: *Ap #4 #2 (locked by task#0)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    59) Output: ""
        Sparks: 
        Task #0:   Code:{ Push 2
                          MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #37: *Ap #29 #33 (locked by task#3)
                          #2: Global K
                          #2: Global K
                          #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 59
        
        Task #1:   Code:{ Eval
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #45: *Ap #44 #42 (locked by task#1)
                          #42: Ap #2 #35
                          #35: Ind #27
                          #35: Ind #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #35, #36], []> ]
                 Vstack:[  ]
                  Clock: 37
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #47: *Ap #46 #43 (locked by task#3)
                          #46: *Ap #2 #33 (locked by task#3)
                          #2: Global K ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []> ]
                 Vstack:[  ]
                  Clock: 18
        Heap: #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: *Ap #44 #42 (locked by task#1)
              #44: *Ap #2 #35 (locked by task#1)
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#0)
              #28: *Ap #4 #2 (locked by task#0)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    60) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #37: *Ap #29 #33 (locked by task#3)
                          #2: Global K
                          #2: Global K
                          #37: *Ap #29 #33 (locked by task#3)
                          #2: Global K ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 60
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #35: Ind #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #35, #36], []>
                          <{Update 2; Pop 2; Unwind}, [#35, #42, #45], []> ]
                 Vstack:[  ]
                  Clock: 38
        
        Task #3:   Code:{ Push 0
                          Eval
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #47: *Ap #46 #43 (locked by task#3)
                          #43: Ap #2 #33
                          #33: Ind #36 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []> ]
                 Vstack:[  ]
                  Clock: 19
        Heap: #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: *Ap #44 #42 (locked by task#1)
              #44: *Ap #2 #35 (locked by task#1)
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#0)
              #28: *Ap #4 #2 (locked by task#0)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
    task#3 meets *NAp locked by task#1
          #1: Global I

    61) Output: ""
        Sparks: 
        Task #0:   Code:{ Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #37: *Ap #29 #33 (locked by task#3)
                          #2: Global K
                          #2: Global K
                          #48: Ap #2 #37 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 61
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #35, #36], []>
                          <{Update 2; Pop 2; Unwind}, [#35, #42, #45], []> ]
                 Vstack:[  ]
                  Clock: 39
        
        Task #3:   Code:{ Eval
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #47: *Ap #46 #43 (locked by task#3)
                          #43: Ap #2 #33
                          #33: Ind #36
                          #33: Ind #36 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []> ]
                 Vstack:[  ]
                  Clock: 20
        Heap: #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: *Ap #44 #42 (locked by task#1)
              #44: *Ap #2 #35 (locked by task#1)
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#0)
              #28: *Ap #4 #2 (locked by task#0)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    62) Output: ""
        Sparks: 
        Task #0:   Code:{ Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #37: *Ap #29 #33 (locked by task#3)
                          #2: Global K
                          #2: Global K
                          #48: Ap #2 #37
                          #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 62
        
        Task #1:   Code:{ Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #45: *Ap #44 #42 (locked by task#1)
                          #42: Ap #2 #35
                          #35: Ind #27
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #35, #36], []> ]
                 Vstack:[  ]
                  Clock: 40
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #33: Ind #36 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 21
        Heap: #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: *Ap #44 #42 (locked by task#1)
              #44: *Ap #2 #35 (locked by task#1)
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#0)
              #28: *Ap #4 #2 (locked by task#0)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    63) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #37: *Ap #29 #33 (locked by task#3)
                          #2: Global K
                          #2: Global K
                          #48: Ap #2 #37
                          #37: *Ap #29 #33 (locked by task#3)
                          #2: Global K ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 63
        
        Task #1:   Code:{ Pop 2
                          Unwind }
                 
                  Stack:[ #45: Ind #27
                          #42: Ap #2 #35
                          #35: Ind #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #35, #36], []> ]
                 Vstack:[  ]
                  Clock: 41
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#1) ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 22
        Heap: #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#1)
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#0)
              #28: *Ap #4 #2 (locked by task#0)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    64) Output: ""
        Sparks: 
        Task #0:   Code:{ MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #37: *Ap #29 #33 (locked by task#3)
                          #2: Global K
                          #2: Global K
                          #48: Ap #2 #37
                          #49: Ap #2 #37 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 64
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #45: Ind #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #35, #36], []> ]
                 Vstack:[  ]
                  Clock: 42
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #36: Ap #29 #35 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 23
        Heap: #49: Ap #2 #37
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ap #29 #35
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    65) Output: ""
        Sparks: 
        Task #0:   Code:{ Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #37: *Ap #29 #33 (locked by task#3)
                          #2: Global K
                          #2: Global K
                          #50: Ap #49 #48 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 65
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #35, #36], []> ]
                 Vstack:[  ]
                  Clock: 43
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#3)
                          #29: Ap #28 #2 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 24
        Heap: #50: Ap #49 #48
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#3)
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    66) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #50: Ap #49 #48 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []> ]
                 Vstack:[  ]
                  Clock: 66
        
        Task #1:   Code:{ Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#3)
                          #35: Ind #27
                          #2: Global K
                          #2: Global K
                          #27: 3 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 44
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #36: *Ap #29 #35 (locked by task#3)
                          #29: *Ap #28 #2 (locked by task#3)
                          #28: Ap #4 #2 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 25
        Heap: #50: Ap #49 #48
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: *Ap #29 #35 (locked by task#3)
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: *Ap #28 #2 (locked by task#3)
              #28: Ap #4 #2
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    67) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #50: *Ap #49 #48 (locked by task#0)
                          #49: Ap #2 #37 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []> ]
                 Vstack:[  ]
                  Clock: 67
        
        Task #1:   Code:{ Pop 3
                          Unwind }
                 
                  Stack:[ #36: Ind #27
                          #35: Ind #27
                          #2: Global K
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 45
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #36: Ind #27
                          #29: Ap #28 #2
                          #28: *Ap #4 #2 (locked by task#3)
                          #4: Global S ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 26
        Heap: #50: *Ap #49 #48 (locked by task#0)
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    68) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #50: *Ap #49 #48 (locked by task#0)
                          #49: *Ap #2 #37 (locked by task#0)
                          #2: Global K ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []> ]
                 Vstack:[  ]
                  Clock: 68
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #36: Ind #27 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 46
        
        Task #3:   Code:{ Push 2
                          Push 2
                          MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: Ind #27
                          #27: 3
                          #2: Global K
                          #2: Global K ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 27
        Heap: #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    69) Output: ""
        Sparks: 
        Task #0:   Code:{ Push 0
                          Eval
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #50: *Ap #49 #48 (locked by task#0)
                          #48: Ap #2 #37
                          #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []> ]
                 Vstack:[  ]
          task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
        Clock: 69
        
        Task #1:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 47
        
        Task #3:   Code:{ Push 2
                          MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: Ind #27
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 28
        Heap: #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    70) Output: ""
        Sparks: 
        Task #0:   Code:{ Eval
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #50: *Ap #49 #48 (locked by task#0)
                          #48: Ap #2 #37
                          #37: *Ap #29 #33 (locked by task#3)
                          #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []> ]
                 Vstack:[  ]
                  Clock: 70
        
        Task #3:   Code:{ MkAp
                          Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: Ind #27
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #27: 3
                          #2: Global K ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 29
        Heap: #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    71) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 71
        
        Task #3:   Code:{ Push 3
                          Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: Ind #27
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #51: Ap #2 #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 30
        Heap: #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
#10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    72) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 72
        
        Task #3:   Code:{ Push 2
                          MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: Ind #27
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #51: Ap #2 #27
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 31
        Heap: #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    73) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 73
        
        Task #3:   Code:{ MkAp
                          MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: Ind #27
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #51: Ap #2 #27
                          #27: 3
                          #2: Global K ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 32
        Heap: #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    74) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 74
        
        Task #3:   Code:{ MkAp
                          Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: Ind #27
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #51: Ap #2 #27
                          #52: Ap #2 #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 33
        Heap: #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    75) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 75
        
        Task #3:   Code:{ Eval
                          Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: Ind #27
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #53: Ap #52 #51 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 34
        Heap: #53: Ap #52 #51
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    76) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 76
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #53: Ap #52 #51 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #36], []> ]
                 Vstack:[  ]
                  Clock: 35
        Heap: #53: Ap #52 #51
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    77) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 77
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #53: *Ap #52 #51 (locked by task#3)
                          #52: Ap #2 #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #36], []> ]
                 Vstack:[  ]
                  Clock: 36
        Heap: #53: *Ap #52 #51 (locked by task#3)
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Globaltask#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
 /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    78) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 78
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #53: *Ap #52 #51 (locked by task#3)
                          #52: *Ap #2 #27 (locked by task#3)
                          #2: Global K ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #36], []> ]
                 Vstack:[  ]
                  Clock: 37
        Heap: #53: *Ap #52 #51 (locked by task#3)
              #52: *Ap #2 #27 (locked by task#3)
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    79) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 79
        
        Task #3:   Code:{ Push 0
                          Eval
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #53: *Ap #52 #51 (locked by task#3)
                          #51: Ap #2 #27
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #36], []> ]
                 Vstack:[  ]
                  Clock: 38
        Heap: #53: *Ap #52 #51 (locked by task#3)
              #52: *Ap #2 #27 (locked by task#3)
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    80) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 80
        
        Task #3:   Code:{ Eval
                          Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #53: *Ap #52 #51 (locked by task#3)
                          #51: Ap #2 #27
                          #27: 3
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #36], []> ]
                 Vstack:[  ]
                  Clock: 39
        Heap: #53: *Ap #52 #51 (locked by task#3)
              #52: *Ap #2 #27 (locked by task#3)
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    81) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 81
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #36], []>
                          <{Update 2; Pop 2; Unwind}, [#27, #51, #53], []> ]
                 Vstack:[  ]
                  Clock: 40
        Heap: #53: *Ap #52 #51 (locked by task#3)
              #52: *Ap #2 #27 (locked by task#3)
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    82) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 82
        
        Task #3:   Code:{ Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #53: *Ap #52 #51 (locked by task#3)
                          #51: Ap #2 #27
                          #27: 3
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #36], []> ]
                 Vstack:[  ]
                  Clock: 41
        Heap: #53: *Ap #52 #51 (locked by task#3)
              #52: *Ap #2 #27 (locked by task#3)
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    83) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 83
        
        Task #3:   Code:{ Pop 2
                          Unwind }
                 
                  Stack:[ #53: Ind #27
                          #51: Ap #2 #27
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #36], []> ]
                 Vstack:[  ]
                  Clock: 42
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global Ftask#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
alse
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    84) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 84
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #53: Ind #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #36], []> ]
                 Vstack:[  ]
                  Clock: 43
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    85) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 85
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #27, #36], []> ]
                 Vstack:[  ]
                  Clock: 44
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    86) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 86
        
        Task #3:   Code:{ Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #36: Ind #27
                          #27: 3
                          #2: Global K
                          #2: Global K
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 45
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    87) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 87
        
        Task #3:   Code:{ Pop 3
                          Unwind }
                 
                  Stack:[ #36: Ind #27
                          #27: 3
                          #2: Global K
                          #2: Global K ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 46
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    88) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 88
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #36: Ind #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 47
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    89) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 89
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []>
                          <{Update 2; Pop 2; Unwind}, [#33, #43, #47], []> ]
                 Vstack:[  ]
                  Clock: 48
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    90) Output: ""
        Sparks: 
        Task #0:   Codtask#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
task#0 meets *NAp locked by task#3
e:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 90
        
        Task #3:   Code:{ Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #47: *Ap #46 #43 (locked by task#3)
                          #43: Ap #2 #33
                          #33: Ind #36
                          #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []> ]
                 Vstack:[  ]
                  Clock: 49
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: *Ap #46 #43 (locked by task#3)
              #46: *Ap #2 #33 (locked by task#3)
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    91) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 91
        
        Task #3:   Code:{ Pop 2
                          Unwind }
                 
                  Stack:[ #47: Ind #27
                          #43: Ap #2 #33
                          #33: Ind #36 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []> ]
                 Vstack:[  ]
                  Clock: 50
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    92) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 92
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #47: Ind #27 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []> ]
                 Vstack:[  ]
                  Clock: 51
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    93) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 93
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{}, [], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #33, #37], []> ]
                 Vstack:[  ]
                  Clock: 52
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    94) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3) ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 94
        
        Task #3:   Code:{ Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #37: *Ap #29 #33 (locked by task#3)
                          #33: Ind #36
                          #2: Global K
                          #2: Global K
                          #27: 3 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 53
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: *Ap #29 #33 (locked by task#3)
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    95) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #37: Ind #27 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 95
        
        Task #3:   Code:{ Pop 3
                          Unwind }
                 
                  Stack:[ #37: Ind #27
                          #33: Ind #36
                          #2: Global K
                          #2: Global K ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 54
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    96) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []>
                          <{Update 2; Pop 2; Unwind}, [#37, #48, #50], []> ]
                 Vstack:[  ]
                  Clock: 96
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #37: Ind #27 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 55
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    97) Output: ""
        Sparks: 
        Task #0:   Code:{ Update 2
                          Pop 2
                          Unwind }
                 
                  Stack:[ #50: *Ap #49 #48 (locked by task#0)
                          #48: Ap #2 #37
                          #37: Ind #27
                          #27: 3 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []> ]
                 Vstack:[  ]
                  Clock: 97
        
        Task #3:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{}, [], []> ]
                 Vstack:[  ]
                  Clock: 56
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: *Ap #49 #48 (locked by task#0)
              #49: *Ap #2 #37 (locked by task#0)
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    98) Output: ""
        Sparks: 
        Task #0:   Code:{ Pop 2
                          Unwind }
                 
                  Stack:[ #50: Ind #27
                          #48: Ap #2 #37
                          #37: Ind #27 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []> ]
                 Vstack:[  ]
                  Clock: 98
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

    99) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #50: Ind #27 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []> ]
                 Vstack:[  ]
                  Clock: 99
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

   100) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []>
                          <{Update 3; Pop 3; Unwind}, [#2, #2, #37, #40], []> ]
                 Vstack:[  ]
                  Clock: 100
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

   101) Output: ""
        Sparks: 
        Task #0:   Code:{ Update 3
                          Pop 3
                          Unwind }
                 
                  Stack:[ #40: *Ap #29 #37 (locked by task#0)
                          #37: Ind #27
                          #2: Global K
                          #2: Global K
                          #27: 3 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 101
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: *Ap #29 #37 (locked by task#0)
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

   102) Output: ""
        Sparks: 
        Task #0:   Code:{ Pop 3
                          Unwind }
                 
                  Stack:[ #40: Ind #27
                          #37: Ind #27
                          #2: Global K
                          #2: Global K ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 102
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: Ind #27
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

   103) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #40: Ind #27 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 103
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: Ind #27
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

   104) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{Print}, [], []>
                          <{Update 0; Pop 0; Unwind}, [#7], []> ]
                 Vstack:[  ]
                  Clock: 104
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: Ind #27
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

   105) Output: ""
        Sparks: 
        Task #0:   Code:{ Update 0
                          Pop 0
                          Unwind }
                 
                  Stack:[ #7: *Global main (locked by task#)0)
                          #27: 3 ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 105
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: Ind #27
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: *Global main (locked by task#)0)
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

   106) Output: ""
        Sparks: 
        Task #0:   Code:{ Pop 0
                          Unwind }
                 
                  Stack:[ #7: Ind #27 ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 106
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: Ind #27
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: Ind #27
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

   107) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #7: Ind #27 ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 107
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: Ind #27
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: Ind #27
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

   108) Output: ""
        Sparks: 
        Task #0:   Code:{ Unwind }
                 
                  Stack:[ #27: 3 ]
                   Dump:[ <{Print}, [], []> ]
                 Vstack:[  ]
                  Clock: 108
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: Ind #27
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: Ind #27
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

   109) Output: ""
        Sparks: 
        Task #0:   Code:{ Print }
                 
                  Stack:[ #27: 3 ]
                   Dump:[  ]
                 Vstack:[  ]
                  Clock: 109
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: Ind #27
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: Ind #27
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

   110) Output: "3"
        Sparks: 
        Heap: #53: Ind #27
              #52: Ap #2 #27
              #51: Ap #2 #27
              #50: Ind #27
              #49: Ap #2 #37
              #48: Ap #2 #37
              #47: Ind #27
              #46: Ap #2 #33
              #45: Ind #27
              #44: Ap #2 #35
              #43: Ap #2 #33
              #42: Ap #2 #35
              #41: Ind #27
              #40: Ind #27
              #39: Ap #2 #27
              #38: Ap #2 #27
              #37: Ind #27
              #36: Ind #27
              #35: Ind #27
              #34: Ind #40
              #33: Ind #36
              #32: Ind #34
              #31: Ap #8 #30
              #30: Ap #8 #29
              #29: Ap #28 #2
              #28: *Ap #4 #2 (locked by task#3)
              #27: 3
              #26: Global False
              #25: Global True
              #24: Global par
              #23: Global if
              #22: Global not
              #21: Global ||
              #20: Global &&
              #19: Global <
              #18: Global <=
              #17: Global >
              #16: Global >=
              #15: Global /=
              #14: Global ==
              #13: Global negate
              #12: Global /
              #11: Global *
              #10: Global -
              #9: Global +
              #8: Global twice'
              #7: Ind #27
              #6: Global twice
              #5: Global compose
              #4: Global S
              #3: Global K1
              #2: Global K
              #1: Global I

live durations = [110,57,48,27]
all outputs: (3)
